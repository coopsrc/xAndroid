// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.61'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.novoda:bintray-release:0.9.1'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url "https://dl.bintray.com/coopsrc/xAndroid"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    compileSdkVersion = 29
    minSdkVersion = 21
    targetSdkVersion = 29
    buildToolsVersion = "29.0.2"

    // A.BB.CCC
    // Major.Minor.Commit
    majorVersion = 1
    minorVersion = 6
    revisionVersion = 1
    versionCode = generateVersionCode(majorVersion, minorVersion, revisionVersion)
    versionName = generateVersionName(majorVersion, minorVersion, revisionVersion)
    versionNameAlpha = versionName + '-alpha'

    androidx_arch_core = "2.1.0"
    androidx_core = "1.1.0"
    androidx_lifecycle = "2.1.0"
    androidx_room = "2.2.1"
    androidx_constraintlayout = "1.1.3"
    androidx_annotation = "1.1.0"
    androidx_appcompat = "1.1.0"
    androidx_sqlite = "2.0.1"

    google_android_material = "1.0.0"
    google_code_gson = "2.8.6"

    junit = "4.12"
    androidx_test = "1.2.0"
    androidx_test_ext = "1.1.1"
    androirx_test_espresso = "3.2.0"

    reactivex_rxandroid = "2.1.1"
    reactivex_rxjava = "2.2.15"
    reactivex_rxkotlin = "2.4.0"

    squareup_okio = "2.4.1"
    squareup_okhttp3 = "4.2.2"
    squareup_retrofit = "2.6.2"
    squareup_sqlbrite3 = "3.2.0"
}

static def generateVersionCode(def major, def minor, def revision) {
    return major * 100000 + minor * 1000 + revision
}

static def generateVersionName(def major, def minor, def revision) {
    return '' + major + '.' + minor + '.' + revision
}